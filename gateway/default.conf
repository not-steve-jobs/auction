    server {

        listen 3030;

        root /usr/share/nginx/html;
        index index.html;

      # Add index.php to the list if you are using PHP
       server_name localhost;

        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header X-User-Agent $http_user_agent;
            proxy_set_header X-Request-URI $request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api {
            proxy_pass http://authentication:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/v1/products {
            proxy_pass http://product:2020;
                     proxy_set_header Authorization $http_authorization;
                        proxy_pass_header Authorization;
                        proxy_http_version 1.1;
                        client_max_body_size 1000000m;
                        proxy_set_header Upgrade $http_upgrade;
                        proxy_set_header Connection 'upgrade';
                        proxy_set_header Host $host;
                        proxy_cache_bypass $http_upgrade;
        }

        location /api/v1/services {
            proxy_pass http://service:4040;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            proxy_http_version 1.1;
            client_max_body_size 1000000m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /storage {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            alias /diskStorage;
            client_max_body_size 10000m;
            autoindex on;
       }
    }

 # ######################### GATEWAY
    # location /api {
    #         auth_request     /auth;
    #         auth_request_set $auth_status $upstream_status;
    #         proxy_pass http://notification:8080;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         # Additional authentication-related headers can be added here.
    #         # If the authentication is successful, you can route the request to the appropriate backend.
    #   }

    #     location = /auth {
    #         internal;
    #         proxy_method POST;
    #         proxy_pass http://authentication:3000/api/v1/gateway;
    #         proxy_pass_request_body on;
    #         proxy_set_header Content-Length $request_length;
    #         proxy_set_header X-Original-URI $request_uri;
    #         proxy_set_header Content-Type $content_type;
    #     }
